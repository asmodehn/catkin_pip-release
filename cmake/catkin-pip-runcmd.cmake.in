message(STATUS "Loading catkin-pip-runcmd.cmake from ${CMAKE_CURRENT_LIST_DIR}... ")

if ( CMAKE_BACKWARDS_COMPATIBILITY LESS 2.8 )
	message ( FATAL_ERROR " CMAKE MINIMUM BACKWARD COMPATIBILITY REQUIRED : 2.8 !" )
endif( CMAKE_BACKWARDS_COMPATIBILITY LESS 2.8 )

#
# Important : This script is included by multiple cmake scripts at configure and build time
# So it needs to be idempotent (no change if called multiple time with same settings/environment)
#

# Enforcing one time include https://cmake.org/Wiki/CMake_Performance_Tips#Use_an_include_guard
if(catkin_pip_runcmd_included)
  return()
endif(catkin_pip_runcmd_included)
set(catkin_pip_runcmd_included true)


function(catkin_pip_runcmd)

    set(PIP_PACKAGE_INSTALL_COMMAND ${ARGN})

    string(REPLACE ";" " " PIP_PACKAGE_INSTALL_CMDSTR "${PIP_PACKAGE_INSTALL_COMMAND}")
    message(STATUS "    ... Running ${PIP_PACKAGE_INSTALL_CMDSTR} ...")

    execute_process(
      COMMAND ${PIP_PACKAGE_INSTALL_COMMAND}
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
      RESULT_VARIABLE PIP_RESULT
      OUTPUT_VARIABLE PIP_VARIABLE
      ERROR_VARIABLE PIP_ERROR
    )

    message(STATUS "    ... Done ... [${PIP_RESULT}]: ${PIP_VARIABLE}")
    if (PIP_RESULT)
        message(STATUS "Command ${PIP_PACKAGE_INSTALL_CMDSTR} FAILED !")
        message(FATAL_ERROR "${PIP_ERROR}")
    endif()

endfunction()