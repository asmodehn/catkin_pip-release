message(STATUS "Loading catkin-pip-env.cmake from ${CMAKE_CURRENT_LIST_DIR}... ")

#
# Important : This script is included by multiple cmake scripts at configure and build time
# So it needs to be idempotent (no change if called multiple time with same settings/environment)
#

if ( CMAKE_BACKWARDS_COMPATIBILITY LESS 2.8 )
	message ( FATAL_ERROR " CMAKE MINIMUM BACKWARD COMPATIBILITY REQUIRED : 2.8 !" )
endif( CMAKE_BACKWARDS_COMPATIBILITY LESS 2.8 )

macro(catkin_pip_check_env config_prefix)
    # Make sure the catkin python package directory for the workspace is in python path
    # This is only needed if the user didn't source the current workspace setup.bash.
    # This happens the first time when using catkin_pip in workspace
    string(FIND "$ENV{PYTHONPATH}" ${config_prefix}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@ FOUND_PPPATH)
    string(FIND "$ENV{PYTHONPATH}" ${CATKIN_DEVEL_PREFIX}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@ FOUND_WPPPATH)
    string(FIND "$ENV{PATH}" ${config_prefix}/@CATKIN_GLOBAL_BIN_DESTINATION@ FOUND_SPATH)

    if ( ( FOUND_PPATH LESS 0 ) OR ( FOUND_PPPATH LESS 0 ) OR ( FOUND_SPATH LESS 0 ) )
        message(AUTHOR_WARNING "Incomplete catkin-pip setup detected."
        "This is expected if you use catkin-pip from source, and did not source the current develspace yet."
        "Quick patch will be applied to the current cmake process environment."
        )

        if ( FOUND_PPPATH LESS 0 )
            message(STATUS "Adding ${config_prefix}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@ to PYTHONPATH")
            set(ENV{PYTHONPATH} "${config_prefix}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@:$ENV{PYTHONPATH}")
        endif()

        # We also need to put the site-packages from the devel workspace in the path to get it ready to use by packages
        if ( FOUND_WPPPATH LESS 0 )
            message(STATUS "Adding ${CATKIN_DEVEL_PREFIX}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@ to PYTHONPATH")
            set(ENV{PYTHONPATH} "${CATKIN_DEVEL_PREFIX}/@CATKIN_PIP_GLOBAL_PYTHON_DESTINATION@:$ENV{PYTHONPATH}")
        endif()

        if ( FOUND_SPATH LESS 0 )
            message(STATUS "Adding ${config_prefix}/@CATKIN_GLOBAL_BIN_DESTINATION@ to PATH")
            set(ENV{PATH} "${config_prefix}/@CATKIN_GLOBAL_BIN_DESTINATION@:$ENV{PATH}")
        endif()

        # Only display message if modification occured
        message(STATUS "Catkin pip PYTHONPATH : $ENV{PYTHONPATH}")
        message(STATUS "Catkin pip PATH : $ENV{PATH}")
    endif()

    # Note : this is obviously not changing anything in the shell environment where cmake was started from.
    # Since this cmake extension depends on catkin we also do the same in an envhook for normal usage (source setup.bash).
endmacro()


