#!/usr/bin/env bash
# generated from catkin_pure_python/env-hooks/42.site-packages.bash.in

# For catkin it is simpler to do that in _setup_util.py.in.
# but until catkin does this by default the proper way from outside catkin is probably a env-hook

pythonpathprepend() {
  for ARG in "$@"
  do
    # if ARG exists
    if [ -d "$ARG" ]; then
        # if PYTHONPATH is empty
        if [ -z "$PYTHONPATH" ]; then
            PYTHONPATH="$ARG"
        else
            # if ARG is not in PYTHONPATH
            if [[ "$PYTHONPATH" != *"$ARG"* ]]; then
                # we prepend it
                PYTHONPATH="$ARG:${PYTHONPATH}"
            fi
        fi
    fi
  done
}

CATKIN_PIP_ENV_HOOKS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CATKIN_PIP_CURRENT_WORKSPACE="$( dirname "$( dirname "$(dirname "${CATKIN_PIP_ENV_HOOKS_DIR}" )" )" )"

# we get the workspace root paths list
CATKIN_PIP_WORKSPACES_PATH="@CMAKE_PREFIX_PATH_AS_IS@"

# if needed we add the current workspace
if [[ "$CATKIN_PIP_WORKSPACES_PATH" != *"$CATKIN_PIP_CURRENT_WORKSPACE"* ]]; then
    CATKIN_PIP_WORKSPACES_PATH="${CATKIN_PIP_CURRENT_WORKSPACE};${CATKIN_PIP_WORKSPACES_PATH}"
fi

# we split the workspace root paths list into an array (separated by spaces)
IFS=';' read -a CATKIN_PIP_WORKSPACES_PATH_ARRAY <<< "$CATKIN_PIP_WORKSPACES_PATH"

# and for each workspace path
for CATKIN_PIP_PP in "${CATKIN_PIP_WORKSPACES_PATH_ARRAY[@]}"
do
    # we combine it with site-packages (pip default) location, before attempting to prepend to the python path
    pythonpathprepend "${CATKIN_PIP_PP}/lib/python2.7/site-packages"
done

unset CATKIN_PIP_PP